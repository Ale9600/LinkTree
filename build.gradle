plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.library") version "3.4.1"
    id("java")
    id("io.micronaut.application") version "3.4.1"
}

version = "0.3"

application {
      setMainClassName('core.main.module.Application')
}
repositories {
    mavenCentral()
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.micronaut.library'

    repositories {
        mavenCentral()
        google()
    }

    if (plugins.hasPlugin('java')) {

        dependencies {
            //ANNOTATION
            annotationProcessor("io.micronaut.data:micronaut-data-processor")
            annotationProcessor("io.micronaut:micronaut-http-validation")
            annotationProcessor("org.mapstruct:mapstruct-processor:1.5.2.Final")
            annotationProcessor("io.micronaut.security:micronaut-security-annotations")

            //IMPLEMENTATION
            implementation("io.micronaut:micronaut-http-client")
            implementation("io.micronaut:micronaut-jackson-databind")
            implementation("org.mapstruct:mapstruct:1.5.2.Final")
            implementation("io.micronaut:micronaut-validation")
            implementation("io.micronaut.security:micronaut-security-jwt")
            implementation("org.bouncycastle:bcpkix-jdk15on:1.65")

            //RUNTIME
            runtimeOnly("ch.qos.logback:logback-classic")

            //TEST
            testAnnotationProcessor ("io.micronaut:micronaut-inject-java")
            testImplementation("org.junit.jupiter:junit-jupiter-api")
            testImplementation("io.micronaut.test:micronaut-test-junit5:3.4.0")
            testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

        }
    }
}


dependencies {
    implementation project(":main")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("core.main.module.*")
    }
}


